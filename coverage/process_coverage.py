#!/usr/bin/env python3
""" Process coverage files generated by samtools depth. """

import argparse

import numpy as np
import matplotlib.pylab as plt

from coverage_utils import get_chrom_lens


#-------------------------------------------------------------------------------
def get_args():
    """ Get CLI arguments.
    Args: None
    Returns:
        args (argparse.Namespace): Parsed arguments.
    """

    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--input-covfile", type=str, required=True,
                        help="Input coverage file.")
    parser.add_argument("-b", "--bamfile", type=str, required=True,
                        help="Related bamfile.")
    parser.add_argument("-c", "--chrom", type=str, required=True,
                        help="Chromosome to process.")
    parser.add_argument("--npz", action="store_true", help="Save data as .npz")
    parser.add_argument("--img", type=str, help="Save data as image.")
    parser.add_argument("--plt", action="store_true",
                        help="Plot data interactively.")

    args = parser.parse_args()

    return args


#-------------------------------------------------------------------------------
def main():
    """ Main routine. """

    args = get_args()

    chrom_lens = get_chrom_lens(args.bamfile, only_chrom=args.chrom)
    depths = np.zeros(chrom_lens[args.chrom] + 1)
    with open(args.input_covfile) as finp:
        line = finp.readline()
        while line:
            words = line.split()
            pos = int(words[1])
            depth = int(words[2])
            depths[pos] = depth
            line = finp.readline()

    if args.npz:
        np.savez(f"{args.chrom}.cov.npz", depths=depths)

    if args.img:
        print("TODO: Save figure as image.")

    if args.plt:
        plt.figure(f"{args.chrom}")
        plt.plot(depths)


#-------------------------------------------------------------------------------
if __name__ == "__main__":
    main()
